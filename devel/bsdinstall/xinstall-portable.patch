diff -ru -ru xinstall_orig/xinstall.c xinstall/xinstall.c
--- xinstall_orig/xinstall.c	2006-10-09 17:10:27.000000000 +0200
+++ xinstall/xinstall.c	2005-01-25 15:34:57.000000000 +0100
@@ -44,6 +44,7 @@
 #endif
 
 #include <sys/cdefs.h>
+__FBSDID("$FreeBSD: src/usr.bin/xinstall/xinstall.c,v 1.66 2005/01/25 14:34:57 ssouhlal Exp $");
 
 #include <sys/param.h>
 #include <sys/mman.h>
@@ -72,13 +73,9 @@
 
 #define MAX_CMP_SIZE	(16 * 1024 * 1024)
 
-#ifndef MAXBSIZE
-#define MAXBSIZE    65536   /* must be power of 2 */
-#endif /* MAXBSIZE */
-
 #define	DIRECTORY	0x01		/* Tell install it's a directory. */
 #define	SETFLAGS	0x02		/* Tell install to set flags. */
-#define	NOCHANGEBITS	0 //(UF_IMMUTABLE | UF_APPEND | SF_IMMUTABLE | SF_APPEND)
+#define	NOCHANGEBITS	(UF_IMMUTABLE | UF_APPEND | SF_IMMUTABLE | SF_APPEND)
 #define	BACKUP_SUFFIX	".old"
 
 struct passwd *pp;
@@ -104,7 +101,7 @@
 main(int argc, char *argv[])
 {
 	struct stat from_sb, to_sb;
-/*	mode_t *set;*/
+	mode_t *set;
 	u_long fset;
 	int ch, no_target;
 	u_int iflags;
@@ -132,9 +129,8 @@
 			break;
 		case 'f':
 			flags = optarg;
-      fset = 0;
-/*			if (strtofflags(&flags, &fset, NULL))
-				errx(EX_USAGE, "%s: invalid flag", flags);*/
+			if (strtofflags(&flags, &fset, NULL))
+				errx(EX_USAGE, "%s: invalid flag", flags);
 			iflags |= SETFLAGS;
 			break;
 		case 'g':
@@ -144,12 +140,11 @@
 			nommap = 1;
 			break;
 		case 'm':
-      sscanf(optarg, "%o", &mode);
-/*			if (!(set = setmode(optarg)))
+			if (!(set = setmode(optarg)))
 				errx(EX_USAGE, "invalid file mode: %s",
 				     optarg);
 			mode = getmode(set, 0);
-			free(set);*/
+			free(set);
 			break;
 		case 'o':
 			owner = optarg;
@@ -229,6 +224,7 @@
 		if (stat(*argv, &from_sb))
 			err(EX_OSERR, "%s", *argv);
 		if (!S_ISREG(to_sb.st_mode)) {
+			errno = EFTYPE;
 			err(EX_OSERR, "%s", to_name);
 		}
 		if (to_sb.st_dev == from_sb.st_dev &&
@@ -282,6 +278,7 @@
 		if (stat(from_name, &from_sb))
 			err(EX_OSERR, "%s", from_name);
 		if (!S_ISREG(from_sb.st_mode)) {
+			errno = EFTYPE;
 			err(EX_OSERR, "%s", from_name);
 		}
 		/* Build the target path. */
@@ -300,6 +297,7 @@
 
 	/* Only install to regular files. */
 	if (target && !S_ISREG(to_sb.st_mode)) {
+		errno = EFTYPE;
 		warn("%s", to_name);
 		return;
 	}
@@ -402,6 +400,8 @@
 	 */
 	if (tempcopy && !files_match) {
 		/* Try to turn off the immutable bits. */
+		if (to_sb.st_flags & NOCHANGEBITS)
+			(void)chflags(to_name, to_sb.st_flags & ~NOCHANGEBITS);
 		if (dobackup) {
 			if ((size_t)snprintf(backup, MAXPATHLEN, "%s%s", to_name,
 			    suffix) != strlen(to_name) + strlen(suffix)) {
@@ -461,6 +461,8 @@
 	    (uid != (uid_t)-1 && uid != to_sb.st_uid) ||
 	    (mode != (to_sb.st_mode & ALLPERMS))) {
 		/* Try to turn off the immutable bits. */
+		if (to_sb.st_flags & NOCHANGEBITS)
+			(void)fchflags(to_fd, to_sb.st_flags & ~NOCHANGEBITS);
 	}
 
 	if ((gid != (gid_t)-1 && gid != to_sb.st_gid) ||
@@ -487,9 +489,10 @@
 	 * trying to turn off UF_NODUMP.  If we're trying to set real flags,
 	 * then warn if the the fs doesn't support it, otherwise fail.
 	 */
-/*	if (!devnull && (flags & SETFLAGS) &&
+	if (!devnull && (flags & SETFLAGS ||
+	    (from_sb.st_flags & ~UF_NODUMP) != to_sb.st_flags) &&
 	    fchflags(to_fd,
-	    flags & SETFLAGS ? fset : 0)) {
+	    flags & SETFLAGS ? fset : from_sb.st_flags & ~UF_NODUMP)) {
 		if (flags & SETFLAGS) {
 			if (errno == EOPNOTSUPP)
 				warn("%s: chflags", to_name);
@@ -500,7 +503,7 @@
 				err(EX_OSERR, "%s: chflags", to_name);
 			}
 		}
-	}*/
+	}
 
 	(void)close(to_fd);
 	if (!devnull)
@@ -512,8 +515,8 @@
  *	compare two files; non-zero means files differ
  */
 int
-compare(int from_fd, const char *from_name, size_t from_len,
-	int to_fd, const char *to_name, size_t to_len)
+compare(int from_fd, const char *from_name __unused, size_t from_len,
+	int to_fd, const char *to_name __unused, size_t to_len)
 {
 	char *p, *q;
 	int rv;
@@ -608,6 +611,9 @@
 		 * off the append/immutable bits -- if we fail, go ahead,
 		 * it might work.
 		 */
+		if (sbp->st_flags & NOCHANGEBITS)
+			(void)chflags(path, sbp->st_flags & ~NOCHANGEBITS);
+
 		if (dobackup) {
 			if ((size_t)snprintf(backup, MAXPATHLEN, "%s%s",
 			    path, suffix) != strlen(path) + strlen(suffix))
@@ -710,7 +716,7 @@
 		if (wait(&status) == -1 || status) {
 			serrno = errno;
 			(void)unlink(to_name);
-/*			errc(EX_SOFTWARE, serrno, "wait");*/
+			errc(EX_SOFTWARE, serrno, "wait");
 			/* NOTREACHED */
 		}
 	}
