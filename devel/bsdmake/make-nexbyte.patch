diff -ru -ru make_orig/Makefile make/Makefile
--- make_orig/Makefile	2006-10-09 10:23:01.000000000 +0200
+++ make/Makefile	2006-10-09 10:25:56.000000000 +0200
@@ -2,20 +2,25 @@
 #	$Id: make-nexbyte.patch,v 1.2 2006/10/09 14:27:28 roman Exp $
 # $FreeBSD: src/usr.bin/make/Makefile,v 1.61 2005/05/25 08:46:31 harti Exp $
 
-PROG=	make
-CFLAGS+=-I${.CURDIR}
+CC= gcc
+CFLAGS=$(OPTFLAGS) -fno-strict-aliasing -pipe
+PROG=	bsdmake
+CFLAGS+=-I.
 SRCS=	arch.c buf.c cond.c dir.c for.c hash.c hash_tables.c job.c	\
 	lst.c main.c make.c parse.c proc.c shell.c str.c suff.c targ.c	\
 	util.c var.c
+OBJS= $(SRCS:%.c=%.o)
 
 NO_WERROR=
 WARNS?=	6
 NO_SHARED?=	YES
 
 CFLAGS+=-DMAKE_VERSION=\"5200408120\"
-.if defined(_UPGRADING)
-CFLAGS+=-D__FBSDID=__RCSID
-.endif
+
+all: $(PROG)
+
+$(PROG): $(OBJS)
+	$(CC) -o $@ $^
 
 # There is no obvious performance improvement currently.
 # CFLAGS+=-DUSE_KQUEUE
@@ -104,11 +109,6 @@
 # will almost certainly break everything, but it's Unix tradition to
 # allow you to shoot yourself in the foot if you want to :-)
 
-MAKE_SHELL?=	sh
-.if ${MAKE_SHELL} == "csh" || ${MAKE_SHELL} == "sh" || ${MAKE_SHELL} == "ksh"
-CFLAGS+=	-DDEFSHELLNAME=\"${MAKE_SHELL}\"
-.else
-.error "MAKE_SHELL must be set to one of \"csh\", \"sh\" or \"ksh\"."
-.endif
-
-.include <bsd.prog.mk>
+MAKE_SHELL?=	ash
+CFLAGS+=	-DDEFSHELLNAME=\"$(MAKE_SHELL)\"
+CFLAGS+= -Wsystem-headers -Wall -Wno-format-y2k -W -Wno-unused-parameter -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wshadow -Wcast-align -Wunused-parameter -Wchar-subscripts -Winline -Wnested-externs -Wredundant-decls
diff -ru -ru make_orig/Makefile make/Makefile
--- make_orig/Makefile	2006-10-09 12:03:19.000000000 +0200
+++ make/Makefile	2006-10-09 12:04:20.000000000 +0200
@@ -110,5 +110,5 @@
 # allow you to shoot yourself in the foot if you want to :-)
 
 MAKE_SHELL?=	ash
-CFLAGS+=	-DDEFSHELLNAME=\"$(MAKE_SHELL)\"
+CFLAGS+=	-DDEFSHELLNAME=\"$(MAKE_SHELL)\" -DPATH_DEFSHELLDIR=\"$(prefix)/bin\"
 CFLAGS+= -Wsystem-headers -Wall -Wno-format-y2k -W -Wno-unused-parameter -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith -Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wshadow -Wcast-align -Wunused-parameter -Wchar-subscripts -Winline -Wnested-externs -Wredundant-decls
diff -ru -ru make_orig/shell.c make/shell.c
--- make_orig/shell.c	2006-10-09 12:03:19.000000000 +0200
+++ make/shell.c	2006-10-09 12:03:47.000000000 +0200
@@ -74,6 +74,17 @@
 #define	SH_META		"#=|^(){};&<>*?[]:$`\\\n"
 
 static const char *const shells_init[] = {
+
+	/*
+	 * SH description. Echo control is also possible and, under
+	 * sun UNIX anyway, one can even control error checking.
+	 */
+	"name=ash path='" PATH_DEFSHELLDIR "/ash' "
+	"quiet='set -' echo='set -v' filter='set -' "
+	"hasErrCtl=Y check='set -e' ignore='set +e' "
+	"echoFlag=v errFlag=e "
+	"meta='" SH_META "' builtins='" SH_BUILTINS "'",
+
 	/*
 	 * CSH description. The csh can do echo control by playing
 	 * with the setting of the 'echo' shell variable. Sadly,
