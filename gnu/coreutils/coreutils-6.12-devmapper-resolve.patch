--- coreutils-6.12_orig/src/df.c	2008-08-06 00:22:05.000000000 +0200
+++ coreutils-6.12/src/df.c	2008-08-09 14:11:35.000000000 +0200
@@ -251,6 +251,80 @@
     }
 }
 
+static const char *
+mapper_dev(char const *disk)
+{
+  static char vglink[PATH_MAX + 1];
+
+  /* Is it a mapper device? */
+  if(strncmp(disk, "/dev/mapper/", 12) == 0)
+  {
+    char *ptr, *tok, *next;
+    ssize_t len;
+    char delim[2] = {'\0',0};
+    struct stat st;
+    int ret;
+    
+    /* Start assembling the alias path */
+    strcpy(vglink, "/dev/");
+    ptr = &vglink[5];
+
+    /* Now parse the mapper name, token by token, until we 
+       hit a symlink */
+    tok = strtok_r((char *)&disk[12], "-", &next);
+    
+    while(tok)
+    {
+      len = strlen(tok);
+      if(*ptr = delim[0])
+        ++ptr;
+      
+      strncpy(ptr, tok, PATH_MAX - (ptr - vglink));
+      ptr += len;
+      *ptr = '\0';
+
+      delim[0] = '-';
+
+      if((ret = stat(vglink, &st)) == 0)
+      {
+        /* We hit a directory! */
+        if(S_ISDIR(st.st_mode))
+        {
+          tok[len] = delim[0];
+          delim[0] = '/';
+          goto skip;
+        }
+      }
+
+      if(*next == '\0')
+      {
+        /* We finally hit a device! */
+        char lnk[PATH_MAX + 1];
+        ssize_t n;
+          
+        if(ret == -1 && (errno == EPERM || errno == EACCES))
+          return vglink;
+        
+        /* But let's back-check using readlink() first... */
+        if((n = readlink(vglink, lnk, PATH_MAX)) >= 0)
+        {
+          lnk[n] = '\0';
+          if(strcmp(lnk, disk) == 0)
+            return vglink;
+        }
+        return disk;
+      }
+      
+      if(*next)
+        tok[len] = '-';
+skip:
+      tok = strtok_r(NULL, "-", &next);
+    }    
+  }
+  
+  return disk;
+}
+
 /* Display a space listing for the disk device with absolute file name DISK.
    If MOUNT_POINT is non-NULL, it is the name of the root of the
    file system on DISK.
@@ -293,6 +367,8 @@
   if (!selected_fstype (fstype) || excluded_fstype (fstype))
     return;
 
+  disk = mapper_dev(disk);
+  
   /* If MOUNT_POINT is NULL, then the file system is not mounted, and this
      program reports on the file system that the special file is on.
      It would be better to report on the unmounted file system,
