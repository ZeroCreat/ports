args: -r -u -- libiconv-1.12_orig libiconv-1.12
diff -r -u -- libiconv-1.12_orig/src/iconv.c libiconv-1.12/src/iconv.c
--- libiconv-1.12_orig/src/iconv.c	2008-07-28 00:03:19.000000000 +0200
+++ libiconv-1.12/src/iconv.c	2008-07-28 00:11:30.000000000 +0200
@@ -96,13 +96,14 @@
 
 static int discard_unconvertible = 0;
 static int silent = 0;
+static int mac_newlines = 0;
 
 static void usage (int exitcode)
 {
   if (exitcode != 0) {
     const char* helpstring1 =
       /* TRANSLATORS: The first line of the short usage message.  */
-      _("Usage: iconv [-c] [-s] [-f fromcode] [-t tocode] [file ...]");
+      _("Usage: iconv [-c] [-s] [-m] [-f fromcode] [-t tocode] [file ...]");
     const char* helpstring2 =
       /* TRANSLATORS: The second line of the short usage message.
          Align it correctly against the first line.  */
@@ -161,6 +162,11 @@
     printf("\n");
     /* xgettext: no-wrap */
     printf(_("\
+  -m, --mac-newlines\n\
+                               convert mac newlines (CR) to unix ones (LF)\n"));
+    printf("\n");
+    /* xgettext: no-wrap */
+    printf(_("\
 Options controlling error output:\n"));
     /* xgettext: no-wrap */
     printf(_("\
@@ -667,6 +673,32 @@
         infilename,line,column);
 }
 
+static int write_output(char *buf, size_t n, FILE *out)
+{
+  size_t i;
+  
+  if(mac_newlines == 1) {
+    for(i = 0; i < n; i++) {
+      if(buf[i] == '\n') {
+        mac_newlines = 0;
+        break;
+      }
+      if(buf[i] == '\r' && i+1 < n && buf[i+1] != '\n') {
+        mac_newlines = 2;
+        break;
+      }
+    }
+  }
+  
+  if(mac_newlines > 0) {
+    for(i = 0; i < n; i++) {
+      if(buf[i] == '\r') buf[i] = '\n';
+    }
+  }
+
+  return fwrite(buf, 1, n, out);
+}
+
 /* Convert the input given in infile.  */
 
 static int convert (iconv_t cd, FILE* infile, const char* infilename)
@@ -706,7 +738,7 @@
         size_t res = iconv(cd,(ICONV_CONST char**)&inptr,&insize,&outptr,&outsize);
         if (outptr != outbuf) {
           int saved_errno = errno;
-          if (fwrite(outbuf,1,outptr-outbuf,stdout) < outptr-outbuf) {
+          if (write_output(outbuf,outptr-outbuf,stdout) < outptr-outbuf) {
             status = 1;
             goto done;
           }
@@ -768,7 +800,7 @@
     size_t res = iconv(cd,NULL,NULL,&outptr,&outsize);
     if (outptr != outbuf) {
       int saved_errno = errno;
-      if (fwrite(outbuf,1,outptr-outbuf,stdout) < outptr-outbuf) {
+      if (write_output(outbuf,outptr-outbuf,stdout) < outptr-outbuf) {
         status = 1;
         goto done;
       }
@@ -896,6 +928,13 @@
       }
       continue;
     }
+    if (!strcmp(argv[i],"-m")
+        /* --m ... --mac-newlines */
+        || (len >= 3 && !strncmp(argv[i],"--mac-newlines",len))) {
+      mac_newlines = 1;
+      i++;
+      continue;
+    }
     if (!strcmp(argv[i],"-l")
         /* --l ... --list */
         || (len >= 3 && len <= 6 && !strncmp(argv[i],"--list",len))) {
