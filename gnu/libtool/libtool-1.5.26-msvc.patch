--- libtool-1.5.26_orig/config.sub	2008-04-01 19:56:58.000000000 +0000
+++ libtool-1.5.26/config.sub	2008-04-01 19:56:59.000000000 +0000
@@ -699,9 +699,9 @@
 		basic_machine=ns32k-utek
 		os=-sysv
 		;;
-	mingw32)
+	mingw32|msvc*|icl*)
+		os=-$basic_machine
 		basic_machine=i386-pc
-		os=-mingw32
 		;;
 	mingw32ce)
 		basic_machine=arm-unknown
@@ -1250,7 +1250,7 @@
 	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
 	      | -chorusos* | -chorusrdb* \
 	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
-	      | -mingw32* | -linux-gnu* | -linux-newlib* | -linux-uclibc* \
+	      | -mingw32* | -msvc[6-9][01] | -icl* | -linux-gnu* | -linux-newlib* | -linux-uclibc* \
 	      | -uxpv* | -beos* | -mpeix* | -udk* \
 	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
 	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
--- libtool-1.5.26_orig/libtool.m4	2008-04-01 19:56:58.000000000 +0000
+++ libtool-1.5.26/libtool.m4	2008-04-01 20:28:03.000000000 +0000
@@ -688,7 +688,7 @@
   ;;
 
 AC_PROVIDE_IFELSE([AC_LIBTOOL_WIN32_DLL],
-[*-*-cygwin* | *-*-mingw* | *-*-pw32*)
+[*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-msvc* | *-*-icl*)
   AC_CHECK_TOOL(DLLTOOL, dlltool, false)
   AC_CHECK_TOOL(AS, as, false)
   AC_CHECK_TOOL(OBJDUMP, objdump, false)
@@ -1019,7 +1019,7 @@
     lt_cv_dlopen_self=yes
     ;;
 
-  mingw* | pw32*)
+  mingw* | pw32* | msvc* | icl*)
     lt_cv_dlopen="LoadLibrary"
     lt_cv_dlopen_libs=
    ;;
@@ -1438,11 +1438,12 @@
   # libtool to hard-code these into programs
   ;;
 
-cygwin* | mingw* | pw32*)
+cygwin* | mingw* | pw32* | msvc* | icl*)
   version_type=windows
   shrext_cmds=".dll"
   need_version=no
   need_lib_prefix=no
+  dynamic_linker='Win32 ld.exe'
 
   case $GCC,$host_os in
   yes,cygwin* | yes,mingw* | yes,pw32*)
@@ -1488,11 +1489,14 @@
     esac
     ;;
 
+  no,* | *,icl* | *,msvc*)
+    library_names_spec='${libname}${versuffix#-}${shared_ext} ${libname}${versuffix#-}.lib'
+    dynamic_linker='Win32 link.exe'
+    ;;
   *)
-    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    library_names_spec='$libname`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'
     ;;
   esac
-  dynamic_linker='Win32 ld.exe'
   # FIXME: first we should search . and the directory the executable is in
   shlibpath_var=PATH
   ;;
@@ -2292,6 +2296,20 @@
   AC_MSG_CHECKING([for GNU ld])
 else
   AC_MSG_CHECKING([for non-GNU ld])
+
+  if test "$MSVC" = yes; then
+    if test "$INTELC" = yes; then
+      ac_prog="xilink.exe"
+    else
+      ac_prog="link.exe"
+    fi
+dnl  else
+dnl    case $host in
+dnl      *-icl*) ac_prog="xilink.exe" ;;
+dnl      *-msvc*) ac_prog="link.exe" ;;
+dnl    esac
+  fi
+    
 fi
 AC_CACHE_VAL(lt_cv_path_LD,
 [if test -z "$LD"; then
@@ -2415,7 +2433,7 @@
   lt_cv_file_magic_cmd='func_win32_libid'
   ;;
 
-mingw* | pw32*)
+mingw* | pw32* | msvc* | icl*)
   # Base MSYS/MinGW do not provide the 'file' command needed by
   # func_win32_libid shell function, so use a weaker test based on 'objdump',
   # unless we find 'file', for example because we are cross-compiling.
@@ -2625,13 +2643,16 @@
 [AC_REQUIRE([AC_CANONICAL_HOST])dnl
 LIBM=
 case $host in
-*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)
+*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-msvc* | *-*-darwin*)
   # These system don't have libm, or don't need it
   ;;
 *-ncr-sysv4.3*)
   AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM="-lmw")
   AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
   ;;
+*-icl*)
+  AC_CHECK_LIB(m, cos, LIBM="$LIBM libm.lib")
+  ;;
 *)
   AC_CHECK_LIB(m, cos, LIBM="-lm")
   ;;
@@ -3160,6 +3181,32 @@
       _LT_AC_TAGVAR(ld_shlibs, $1)=no
     fi
   ;;
+
+  msvc* | icl*)
+    # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
+    # as there is no search path for DLLs.
+    _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-LIBPATH:$libdir'
+    _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+    _LT_AC_TAGVAR(always_export_symbols, $1)=no
+    _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+
+#    if $LD /Link 2>&1 | grep '^[ \t]*[-/]DLL' > /dev/null; then
+    if $CC -HELP 2>&1 | grep '/LD' > /dev/null; then
+dnl      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -LD $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -Fe $output_objdir/$soname ${wl}-LINK -IMPLIB:$lib'
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -LD $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -Fe$output_objdir/$soname'
+      # If the export-symbols file already is a .def file (1st line
+      # is EXPORTS), use it as is; otherwise, prepend...
+      _LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	cp $export_symbols $output_objdir/$soname.def;
+      else
+	echo EXPORTS > $output_objdir/$soname.def;
+	cat $export_symbols >> $output_objdir/$soname.def;
+      fi
+      $CC -LD -DEF:$output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -Fe$output_objdir/$soname ${wl}-LINK -IMPLIB:$lib'
+    else
+      _LT_AC_TAGVAR(ld_shlibs, $1)=no
+    fi
+  ;;
       darwin* | rhapsody*)
       _LT_AC_TAGVAR(archive_cmds_need_lc, $1)=no
       _LT_AC_TAGVAR(hardcode_direct, $1)=no
@@ -4821,7 +4868,7 @@
 aix*)
   symcode='[[BCDT]]'
   ;;
-cygwin* | mingw* | pw32*)
+cygwin* | mingw* | pw32* | msvc* | icl*)
   symcode='[[ABCDGISTW]]'
   ;;
 hpux*) # Its linker distinguishes data from code symbols
@@ -5024,7 +5071,7 @@
     beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
       # PIC is the default for these OSes.
       ;;
-    mingw* | cygwin* | os2* | pw32*)
+    mingw* | cygwin* | os2* | *w32* | msvc* | icl* | win*)
       # This hack is so that the source file can tell whether it is being
       # built for inclusion in a dll (and should export symbols for example).
       # Although the cygwin gcc ignores -fPIC, still need this for old-style
@@ -5139,6 +5186,10 @@
 	# This is c89, which is MS Visual C++ (no shared libs)
 	# Anyone wants to do a port?
 	;;
+      os2* | *w32* | msvc* | icl* | win*)
+	# MS Visual C++ or Intel C++
+  _LT_AC_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'  
+	;;
       irix5* | irix6* | nonstopux*)
 	case $cc_basename in
 	  CC*)
@@ -5309,7 +5360,7 @@
       # PIC is the default for these OSes.
       ;;
 
-    mingw* | cygwin* | pw32* | os2*)
+    mingw* | cygwin* | *w32* | os2* | msvc* | icl* | win*)
       # This hack is so that the source file can tell whether it is being
       # built for inclusion in a dll (and should export symbols for example).
       # Although the cygwin gcc ignores -fPIC, still need this for old-style
@@ -5382,7 +5433,7 @@
        esac
        ;;
 
-    mingw* | cygwin* | pw32* | os2*)
+    mingw* | cygwin* | *w32* | os2* | msvc* | icl* | win*)
       # This hack is so that the source file can tell whether it is being
       # built for inclusion in a dll (and should export symbols for example).
       m4_if([$1], [GCJ], [],
@@ -5625,7 +5676,7 @@
   # Just being paranoid about ensuring that cc_basename is set.
   _LT_CC_BASENAME([$compiler])
   case $host_os in
-  cygwin* | mingw* | pw32*)
+  cygwin* | mingw* | *w32* | icl* | msvc* | win*)
     # FIXME: the MSVC++ port hasn't been tested in a loooong time
     # When not using gcc, we currently assume that we are using
     # Microsoft Visual C++.
@@ -5736,6 +5787,9 @@
       fi
       ;;
 
+    msvc* | icl*)
+      ;;
+
     interix[[3-9]]*)
       _LT_AC_TAGVAR(hardcode_direct, $1)=no
       _LT_AC_TAGVAR(hardcode_shlibpath_var, $1)=no
@@ -6020,7 +6074,7 @@
       _LT_AC_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic
       ;;
 
-    cygwin* | mingw* | pw32*)
+    cygwin* | mingw* | pw32* | icl* | msvc*)
       # When not using gcc, we currently assume that we are using
       # Microsoft Visual C++.
       # hardcode_libdir_flag_spec is actually meaningless, as there is
@@ -6032,13 +6086,41 @@
       # Tell ltmain to make .dll files, not .so files.
       shrext_cmds=".dll"
       # FIXME: Setting linknames here is a bad hack.
-      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `echo "$deplibs" | $SED -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # FIXME: Using the -Fe instead of the -o output option, we should test for it
+      _LT_AC_TAGVAR(archive_cmds, $1)='$CC -LD -Fe$lib $libobjs $compiler_flags `echo "$deplibs" | $SED -e '\''s/ libc.lib$//'\''` -link -dll~linknames='
       # The linker will automatically build a .lib file if we build a DLL.
       _LT_AC_TAGVAR(old_archive_From_new_cmds, $1)='true'
       # FIXME: Should let the user specify the lib program.
-      _LT_AC_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'
-      _LT_AC_TAGVAR(fix_srcfile_path, $1)='`cygpath -w "$srcfile"`'
+      _LT_AC_TAGVAR(old_archive_cmds, $1)='lib.exe -OUT:$oldlib$oldobjs$old_deplibs'
+      _LT_AC_TAGVAR(fix_srcfile_path, $1)='$srcfile'
       _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      
+      case $host_os in
+        icl* | msvc*)
+          # _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
+          # as there is no search path for DLLs.
+          _LT_AC_TAGVAR(hardcode_libdir_flag_spec, $1)='-LIBPATH:$libdir'
+dnl          _LT_AC_TAGVAR(allow_undefined_flag, $1)=unsupported
+          _LT_AC_TAGVAR(always_export_symbols, $1)=no
+dnl          _LT_AC_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+          _LT_AC_TAGVAR(export_symbols_cmds, $1)='dumpbin.exe /SYMBOLS $libobjs $convenience 2>&1 | $global_symbol_pipe | $SED -n -e '\''/[[ ]]UNDEF[[ ]]/!{/[[ ]]External[[ ]]/ s/.*[[ ]]_//p}'\'' | sort | uniq > $export_symbols'
+
+          if $CC -HELP 2>&1 | grep '/LD' > /dev/null; then
+            _LT_AC_TAGVAR(archive_cmds, $1)='$CC -LD $libobjs $deplibs $compiler_flags -Fe$output_objdir/$soname ${wl}-LINK -IMPLIB:$lib'
+    	# If the export-symbols file already is a .def file (1st line
+    	# is EXPORTS), use it as is; otherwise, prepend...
+    	_LT_AC_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+    	  cp $export_symbols $output_objdir/$soname.def;
+    	else
+    	  echo EXPORTS > $output_objdir/$soname.def;
+    	  cat $export_symbols >> $output_objdir/$soname.def;
+    	fi~
+    	$CC -LD -DEF:$output_objdir/$soname.def $libobjs $deplibs $compiler_flags -Fe$output_objdir/$soname ${wl}-LINK -IMPLIB:$lib'
+          else
+    	_LT_AC_TAGVAR(ld_shlibs, $1)=no
+          fi
+          ;;
+      esac
       ;;
 
     darwin* | rhapsody*)
--- libtool-1.5.26_orig/ltmain.in	2008-04-01 19:56:59.000000000 +0000
+++ libtool-1.5.26/ltmain.in	2008-04-01 21:19:07.000000000 +0000
@@ -4265,7 +4265,9 @@
 
 	# Create links to the real library.
 	for linkname in $linknames; do
-	  if test "$realname" != "$linkname"; then
+    test "${realname%$shared_ext}" = "${linkname%.lib}" && continue
+    
+	  if test ! -f "$output_objdir/$linkname" && test "$realname" != "$linkname"; then
 	    $show "(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)"
 	    $run eval '(cd $output_objdir && $rm $linkname && $LN_S $realname $linkname)' || exit $?
 	  fi
@@ -5765,8 +5767,15 @@
 	  # place dlname in correct position for cygwin
 	  tdlname=$dlname
 	  case $host,$output,$installed,$module,$dlname in
-	    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;
+	    *,*lai,yes,no,*.dll) 
+        tdlname=../bin/$dlname
+        ;;
 	  esac
+    case $dlname in
+      *.dll)
+        set -- $library_names; while test "$#" -gt 1; do shift; done; library_names="$1"
+        ;;
+    esac
 	  $echo > $output "\
 # $outputname - a libtool library file
 # Generated by $PROGRAM - GNU $PACKAGE $VERSION$TIMESTAMP
@@ -6058,8 +6067,8 @@
 	  test -n "$relink_command" && srcname="$realname"T
 
 	  # Install the shared library and build the symlinks.
-	  $show "$install_prog -m 644 $dir/$srcname $destdir/$realname"
-	  $run eval "$install_prog -m 644 $dir/$srcname $destdir/$realname" || exit $?
+	  $show "$install_prog -m 755 $dir/$srcname $destdir/$realname"
+	  $run eval "$install_prog -m 755 $dir/$srcname $destdir/$realname" || exit $?
 	  if test -n "$stripme" && test -n "$striplib"; then
 	    $show "$striplib $destdir/$realname"
 	    $run eval "$striplib $destdir/$realname" || exit $?
@@ -6072,7 +6081,10 @@
 	    # so we also need to try rm && ln -s.
 	    for linkname
 	    do
-	      if test "$linkname" != "$realname"; then
+        if test "${linkname%.lib}" = "${realname%.dll}"; then
+                $show "$install_prog -m 644 $dir/$linkname $destdir"
+                $run eval "$install_prog -m 644 $dir/$linkname $destdir" || exit $?
+	      elif test "$linkname" != "$realname"; then
                 $show "(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })"
                 $run eval "(cd $destdir && { $LN_S -f $realname $linkname || { $rm $linkname && $LN_S $realname $linkname; }; })"
 	      fi
