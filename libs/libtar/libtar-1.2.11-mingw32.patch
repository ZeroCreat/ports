diff -r -u -- libtar-1.2.11_orig/configure libtar-1.2.11/configure
--- libtar-1.2.11_orig/configure	2007-05-31 19:10:11.000000000 +0200
+++ libtar-1.2.11/configure	2007-05-31 19:10:20.000000000 +0200
@@ -6236,7 +6236,7 @@
 See \`config.log' for more details." >&5
 echo "$as_me: error: cannot run test program while cross compiling
 See \`config.log' for more details." >&2;}
-   { (exit 1); exit 1; }; }
+   :; }
 else
   cat >conftest.$ac_ext <<_ACEOF
 
diff -r -u -- libtar-1.2.11_orig/compat/snprintf.c libtar-1.2.11/compat/snprintf.c
--- libtar-1.2.11_orig/compat/snprintf.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/compat/snprintf.c	2007-05-31 19:23:37.000000000 +0200
@@ -54,7 +54,7 @@
 
 /* varargs declarations: */
 
-#if defined(HAVE_STDARG_H)
+#if defined(HAVE_STDARG_H) || defined(__GNUC__)
 # include <stdarg.h>
 # define HAVE_STDARGS    /* let's hope that works everywhere (mj) */
 # define VA_LOCAL_DECL   va_list ap
diff -r -u -- libtar-1.2.11_orig/compat/strmode.c libtar-1.2.11/compat/strmode.c
--- libtar-1.2.11_orig/compat/strmode.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/compat/strmode.c	2007-05-31 19:23:14.000000000 +0200
@@ -58,12 +58,16 @@
 	case S_IFREG:			/* regular */
 		*p++ = '-';
 		break;
+#ifdef S_IFLNK
 	case S_IFLNK:			/* symbolic link */
 		*p++ = 'l';
 		break;
+#endif
+#ifdef S_IFSOCK
 	case S_IFSOCK:			/* socket */
 		*p++ = 's';
 		break;
+#endif
 #ifdef S_IFIFO
 	case S_IFIFO:			/* fifo */
 		*p++ = 'p';
@@ -87,29 +91,40 @@
 		*p++ = 'w';
 	else
 		*p++ = '-';
+#ifdef S_ISUID
 	switch (mode & (S_IXUSR | S_ISUID)) {
+#else
+	switch (mode & (S_IXUSR)) {
+#endif
 	case 0:
 		*p++ = '-';
 		break;
 	case S_IXUSR:
 		*p++ = 'x';
 		break;
+#ifdef S_ISUID
 	case S_ISUID:
 		*p++ = 'S';
 		break;
 	case S_IXUSR | S_ISUID:
 		*p++ = 's';
 		break;
+#endif
 	}
 	/* group */
+#ifdef S_IRGRP
 	if (mode & S_IRGRP)
 		*p++ = 'r';
 	else
+#endif
 		*p++ = '-';
+#ifdef S_IWGRP
 	if (mode & S_IWGRP)
 		*p++ = 'w';
 	else
+#endif
 		*p++ = '-';
+#if defined(S_IXGRP) && defined(S_ISGID)
 	switch (mode & (S_IXGRP | S_ISGID)) {
 	case 0:
 		*p++ = '-';
@@ -124,6 +139,10 @@
 		*p++ = 's';
 		break;
 	}
+#else
+	*p++ = '-';
+#endif
+#ifndef WIN32
 	/* other */
 	if (mode & S_IROTH)
 		*p++ = 'r';
@@ -147,6 +166,11 @@
 		*p++ = 't';
 		break;
 	}
+#else
+	*p++ = '-';
+	*p++ = '-';
+	*p++ = '-';
+#endif
 	*p++ = ' ';		/* will be a '+' if ACL's implemented */
 	*p = '\0';
 }
diff -r -u -- libtar-1.2.11_orig/lib/append.c libtar-1.2.11/lib/append.c
--- libtar-1.2.11_orig/lib/append.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/lib/append.c	2007-05-31 19:22:48.000000000 +0200
@@ -69,7 +69,11 @@
 	       (savename ? savename : "[NULL]"));
 #endif
 
+#ifdef WIN32
+	if (stat(realname, &s) != 0)
+#else
 	if (lstat(realname, &s) != 0)
+#endif
 	{
 #ifdef DEBUG
 		perror("lstat()");
@@ -143,7 +147,11 @@
 	/* check if it's a symlink */
 	if (TH_ISSYM(t))
 	{
+#ifdef WIN32
+		i = -1;
+#else
 		i = readlink(realname, path, sizeof(path));
+#endif
 		if (i == -1)
 			return -1;
 		if (i >= MAXPATHLEN)
diff -r -u -- libtar-1.2.11_orig/lib/decode.c libtar-1.2.11/lib/decode.c
--- libtar-1.2.11_orig/lib/decode.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/lib/decode.c	2007-05-31 19:22:46.000000000 +0200
@@ -14,8 +14,10 @@
 
 #include <stdio.h>
 #include <sys/param.h>
+#ifndef WIN32
 #include <pwd.h>
 #include <grp.h>
+#endif
 
 #ifdef STDC_HEADERS
 # include <string.h>
@@ -47,6 +49,7 @@
 th_get_uid(TAR *t)
 {
 	int uid;
+#ifndef WIN32
 	struct passwd *pw;
 
 	pw = getpwnam(t->th_buf.uname);
@@ -54,6 +57,7 @@
 		return pw->pw_uid;
 
 	/* if the password entry doesn't exist */
+#endif
 	sscanf(t->th_buf.uid, "%o", &uid);
 	return uid;
 }
@@ -63,6 +67,7 @@
 th_get_gid(TAR *t)
 {
 	int gid;
+#ifndef WIN32
 	struct group *gr;
 
 	gr = getgrnam(t->th_buf.gname);
@@ -70,6 +75,7 @@
 		return gr->gr_gid;
 
 	/* if the group entry doesn't exist */
+#endif
 	sscanf(t->th_buf.gid, "%o", &gid);
 	return gid;
 }
@@ -85,9 +91,11 @@
 	{
 		switch (t->th_buf.typeflag)
 		{
+#ifndef WIN32
 		case SYMTYPE:
 			mode |= S_IFLNK;
 			break;
+#endif
 		case CHRTYPE:
 			mode |= S_IFCHR;
 			break;
diff -r -u -- libtar-1.2.11_orig/lib/encode.c libtar-1.2.11/lib/encode.c
--- libtar-1.2.11_orig/lib/encode.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/lib/encode.c	2007-05-31 19:22:44.000000000 +0200
@@ -13,8 +13,10 @@
 #include <internal.h>
 
 #include <stdio.h>
+#ifndef WIN32
 #include <pwd.h>
 #include <grp.h>
+#endif
 #include <sys/types.h>
 
 #ifdef STDC_HEADERS
@@ -49,8 +51,10 @@
 void
 th_set_type(TAR *t, mode_t mode)
 {
+#ifdef S_ISLNK
 	if (S_ISLNK(mode))
 		t->th_buf.typeflag = SYMTYPE;
+#endif
 	if (S_ISREG(mode))
 		t->th_buf.typeflag = REGTYPE;
 	if (S_ISDIR(mode))
@@ -59,7 +63,12 @@
 		t->th_buf.typeflag = CHRTYPE;
 	if (S_ISBLK(mode))
 		t->th_buf.typeflag = BLKTYPE;
-	if (S_ISFIFO(mode) || S_ISSOCK(mode))
+	if (S_ISFIFO(mode)
+#ifdef S_ISSOCK
+		 || S_ISSOCK(mode))
+#else
+		)
+#endif
 		t->th_buf.typeflag = FIFOTYPE;
 }
 
@@ -146,6 +155,12 @@
 	printf("th_set_device(): major = %d, minor = %d\n",
 	       major(device), minor(device));
 #endif
+#ifndef major
+# define major(dev) ((int)(((dev) >> 8) & 0xff))
+#endif
+#ifndef minor
+# define minor(dev) ((int)((dev) & 0xff))
+#endif
 	int_to_oct(major(device), t->th_buf.devmajor, 8);
 	int_to_oct(minor(device), t->th_buf.devminor, 8);
 }
@@ -155,12 +170,13 @@
 void
 th_set_user(TAR *t, uid_t uid)
 {
+#ifndef WIN32
 	struct passwd *pw;
 
 	pw = getpwuid(uid);
 	if (pw != NULL)
 		strlcpy(t->th_buf.uname, pw->pw_name, sizeof(t->th_buf.uname));
-
+#endif
 	int_to_oct(uid, t->th_buf.uid, 8);
 }
 
@@ -169,12 +185,13 @@
 void
 th_set_group(TAR *t, gid_t gid)
 {
+#ifndef WIN32
 	struct group *gr;
 
 	gr = getgrgid(gid);
 	if (gr != NULL)
 		strlcpy(t->th_buf.gname, gr->gr_name, sizeof(t->th_buf.gname));
-
+#endif
 	int_to_oct(gid, t->th_buf.gid, 8);
 }
 
@@ -183,11 +200,13 @@
 void
 th_set_mode(TAR *t, mode_t fmode)
 {
+#ifndef WIN32
 	if (S_ISSOCK(fmode))
 	{
 		fmode &= ~S_IFSOCK;
 		fmode |= S_IFIFO;
 	}
+#endif
 	int_to_oct(fmode, (t)->th_buf.mode, 8);
 }
 
diff -r -u -- libtar-1.2.11_orig/lib/extract.c libtar-1.2.11/lib/extract.c
--- libtar-1.2.11_orig/lib/extract.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/lib/extract.c	2007-05-31 19:22:50.000000000 +0200
@@ -52,6 +52,7 @@
 	ut.modtime = ut.actime = th_get_mtime(t);
 
 	/* change owner/group */
+#ifndef WIN32
 	if (geteuid() == 0)
 #ifdef HAVE_LCHOWN
 		if (lchown(filename, uid, gid) == -1)
@@ -79,7 +80,7 @@
 #endif
 		return -1;
 	}
-
+#endif /* WIN32 */
 	/* change permissions */
 	if (!TH_ISSYM(t) && chmod(filename, mode) == -1)
 	{
@@ -104,7 +105,11 @@
 	{
 		struct stat s;
 
+#ifdef WIN32
+		if (stat(realname, &s) == 0 || errno != ENOENT)
+#else
 		if (lstat(realname, &s) == 0 || errno != ENOENT)
+#endif
 		{
 			errno = EEXIST;
 			return -1;
@@ -313,7 +318,9 @@
 #ifdef DEBUG
 	printf("  ==> extracting: %s (link to %s)\n", filename, linktgt);
 #endif
+#ifndef WIN32
 	if (link(linktgt, filename) == -1)
+#endif
 	{
 #ifdef DEBUG
 		perror("link()");
@@ -348,7 +355,9 @@
 	printf("  ==> extracting: %s (symlink to %s)\n",
 	       filename, th_get_linkname(t));
 #endif
+#ifndef WIN32
 	if (symlink(th_get_linkname(t), filename) == -1)
+#endif
 	{
 #ifdef DEBUG
 		perror("symlink()");
@@ -386,8 +395,10 @@
 	printf("  ==> extracting: %s (character device %ld,%ld)\n",
 	       filename, devmaj, devmin);
 #endif
+#ifndef WIN32
 	if (mknod(filename, mode | S_IFCHR,
 		  compat_makedev(devmaj, devmin)) == -1)
+#endif
 	{
 #ifdef DEBUG
 		perror("mknod()");
@@ -425,8 +436,10 @@
 	printf("  ==> extracting: %s (block device %ld,%ld)\n",
 	       filename, devmaj, devmin);
 #endif
+#ifndef WIN32
 	if (mknod(filename, mode | S_IFBLK,
 		  compat_makedev(devmaj, devmin)) == -1)
+#endif
 	{
 #ifdef DEBUG
 		perror("mknod()");
@@ -461,7 +474,11 @@
 	printf("  ==> extracting: %s (mode %04o, directory)\n", filename,
 	       mode);
 #endif
+#ifdef WIN32
+	if (mkdir(filename) == -1)
+#else
 	if (mkdir(filename, mode) == -1)
+#endif
 	{
 		if (errno == EEXIST)
 		{
@@ -515,7 +532,9 @@
 #ifdef DEBUG
 	printf("  ==> extracting: %s (fifo)\n", filename);
 #endif
+#ifndef WIN32
 	if (mkfifo(filename, mode) == -1)
+#endif
 	{
 #ifdef DEBUG
 		perror("mkfifo()");
diff -r -u -- libtar-1.2.11_orig/lib/libtar.h libtar-1.2.11/lib/libtar.h
--- libtar-1.2.11_orig/lib/libtar.h	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/lib/libtar.h	2007-05-31 19:22:53.000000000 +0200
@@ -15,7 +15,12 @@
 
 #include <sys/types.h>
 #include <sys/stat.h>
+#ifdef WIN32
+/* use shipped tar.h */
+#include "tar.h"
+#else
 #include <tar.h>
+#endif
 
 #include <libtar_listhash.h>
 
@@ -163,8 +168,12 @@
 			 || (S_ISREG((mode_t)oct_to_int((t)->th_buf.mode)) \
 			     && (t)->th_buf.typeflag != LNKTYPE))
 #define TH_ISLNK(t)	((t)->th_buf.typeflag == LNKTYPE)
+#ifdef S_ISLNK
 #define TH_ISSYM(t)	((t)->th_buf.typeflag == SYMTYPE \
 			 || S_ISLNK((mode_t)oct_to_int((t)->th_buf.mode)))
+#else
+#define TH_ISSYM(t)     ((t)->th_buf.typeflag == SYMTYPE)
+#endif
 #define TH_ISCHR(t)	((t)->th_buf.typeflag == CHRTYPE \
 			 || S_ISCHR((mode_t)oct_to_int((t)->th_buf.mode)))
 #define TH_ISBLK(t)	((t)->th_buf.typeflag == BLKTYPE \
diff -r -u -- libtar-1.2.11_orig/lib/output.c libtar-1.2.11/lib/output.c
--- libtar-1.2.11_orig/lib/output.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/lib/output.c	2007-05-31 19:23:03.000000000 +0200
@@ -13,8 +13,10 @@
 #include <internal.h>
 
 #include <stdio.h>
+#ifndef WIN32
 #include <pwd.h>
 #include <grp.h>
+#endif
 #include <time.h>
 #include <limits.h>
 #include <sys/param.h>
@@ -63,8 +65,10 @@
 th_print_long_ls(TAR *t)
 {
 	char modestring[12];
+#ifndef WIN32
 	struct passwd *pw;
 	struct group *gr;
+#endif
 	uid_t uid;
 	gid_t gid;
 	char username[_POSIX_LOGIN_NAME_MAX];
@@ -82,19 +86,22 @@
 #endif
 
 	uid = th_get_uid(t);
+#ifndef WIN32
 	pw = getpwuid(uid);
-	if (pw == NULL)
-		snprintf(username, sizeof(username), "%d", uid);
-	else
+	if (pw != NULL)
 		strlcpy(username, pw->pw_name, sizeof(username));
-
+	else
+#endif
+		snprintf(username, sizeof(username), "%d", uid);
 	gid = th_get_gid(t);
+#ifndef WIN32
 	gr = getgrgid(gid);
-	if (gr == NULL)
-		snprintf(groupname, sizeof(groupname), "%d", gid);
-	else
+	if (gr != NULL)
 		strlcpy(groupname, gr->gr_name, sizeof(groupname));
-
+	else
+#endif
+		snprintf(groupname, sizeof(groupname), "%d", gid);
+		
 	strmode(th_get_mode(t), modestring);
 	printf("%.10s %-8.8s %-8.8s ", modestring, username, groupname);
 
diff -r -u -- libtar-1.2.11_orig/lib/wrapper.c libtar-1.2.11/lib/wrapper.c
--- libtar-1.2.11_orig/lib/wrapper.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/lib/wrapper.c	2007-05-31 19:23:06.000000000 +0200
@@ -128,9 +128,13 @@
 			snprintf(savepath, MAXPATHLEN, "%s/%s", savedir,
 				 dent->d_name);
 
+#ifndef WIN32
 		if (lstat(realpath, &s) != 0)
 			return -1;
-
+#else
+		if (stat(realpath, &s) != 0)
+			return -1;
+#endif
 		if (S_ISDIR(s.st_mode))
 		{
 			if (tar_append_tree(t, realpath,
Only in libtar-1.2.11/libtar: libtar
diff -r -u -- libtar-1.2.11_orig/libtar/libtar.c libtar-1.2.11/libtar/libtar.c
--- libtar-1.2.11_orig/libtar/libtar.c	2007-05-31 19:22:40.000000000 +0200
+++ libtar-1.2.11/libtar/libtar.c	2007-05-31 19:24:42.000000000 +0200
@@ -81,8 +81,10 @@
 	if (fd == -1)
 		return -1;
 
+#ifndef __MINGW32__
 	if ((oflags & O_CREAT) && fchmod(fd, mode))
 		return -1;
+#endif
 
 	gzf = gzdopen(fd, gzoflags);
 	if (!gzf)
diff -r -u -- libtar-1.2.11_orig/compat/strsep.c libtar-1.2.11/compat/strsep.c
--- libtar-1.2.11_orig/compat/strsep.c	2007-05-31 19:29:12.000000000 +0200
+++ libtar-1.2.11/compat/strsep.c	2007-05-31 19:29:59.000000000 +0200
@@ -44,7 +44,7 @@
 #endif
 #endif /* LIBC_SCCS and not lint */
 
-#ifndef HAVE_STRSEP
+#if !defined(HAVE_STRSEP) //&& !defined(__MINGW32__)
 /*
  * Get next token from string *stringp, where tokens are possibly-empty
  * strings separated by characters from delim.
