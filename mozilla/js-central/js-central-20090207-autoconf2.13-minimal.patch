diff -r ab2f5ea8ddcd js/src/aclocal.m4
--- a/js/src/aclocal.m4	Thu Feb 05 16:20:33 2009 -0800
+++ b/js/src/aclocal.m4	Sat Feb 07 17:33:12 2009 +0100
@@ -1,9 +1,16 @@
-dnl
-dnl Local autoconf macros used with mozilla
-dnl The contents of this file are under the Public Domain.
-dnl 
+# generated automatically by aclocal 1.10.1 -*- Autoconf -*-
 
-builtin(include, build/autoconf/pkg.m4)dnl
-builtin(include, build/autoconf/nspr.m4)dnl
-builtin(include, build/autoconf/altoptions.m4)dnl
-builtin(include, build/autoconf/moznbytetype.m4)dnl
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+m4_include([build/autoconf/altoptions.m4])
+m4_include([build/autoconf/moznbytetype.m4])
+m4_include([build/autoconf/nspr.m4])
diff -r ab2f5ea8ddcd js/src/configure.in
--- a/js/src/configure.in	Thu Feb 05 16:20:33 2009 -0800
+++ b/js/src/configure.in	Sat Feb 07 17:33:12 2009 +0100
@@ -200,6 +200,9 @@
 
 if test "$COMPILE_ENVIRONMENT"; then
 
+AC_PROG_CC
+AC_PROG_CXX
+
 if test "$target" != "$host"; then
     echo "cross compiling from $host to $target"
 
@@ -237,7 +240,7 @@
 
     AC_MSG_CHECKING([whether the host c compiler ($HOST_CC $HOST_CFLAGS $HOST_LDFLAGS) works])
     AC_TRY_COMPILE([], [return(0);], 
-	[ac_cv_prog_hostcc_works=1 AC_MSG_RESULT([yes])],
+	[ac_cv_prog_hostcc_works=1; AC_MSG_RESULT([yes])],
 	AC_MSG_ERROR([installation or configuration problem: host compiler $HOST_CC cannot create executables.]) )
 
     CC="$HOST_CXX"
@@ -245,7 +248,7 @@
 
     AC_MSG_CHECKING([whether the host c++ compiler ($HOST_CXX $HOST_CXXFLAGS $HOST_LDFLAGS) works])
     AC_TRY_COMPILE([], [return(0);], 
-	[ac_cv_prog_hostcxx_works=1 AC_MSG_RESULT([yes])],
+	[ac_cv_prog_hostcxx_works=1; AC_MSG_RESULT([yes])],
 	AC_MSG_ERROR([installation or configuration problem: host compiler $HOST_CXX cannot create executables.]) )
     
     CC=$_SAVE_CC
@@ -297,8 +300,6 @@
     dnl compiler appear native.  So we override that here.
     cross_compiling=yes
 else
-    AC_PROG_CC
-    AC_PROG_CXX
     AC_PROG_RANLIB
     AC_PATH_PROGS(AS, $AS as, $CC)
     AC_CHECK_PROGS(AR, ar, :)
@@ -895,7 +896,7 @@
 dnl ========================================================
 dnl set the defaults first
 dnl ========================================================
-AS_BIN=$AS
+ac_cv_path_AS=$AS
 AR_FLAGS='cr $@'
 AR_LIST='$(AR) t'
 AR_EXTRACT='$(AR) x'
@@ -1815,8 +1816,8 @@
     AR_DELETE="$AR d"
     AR_FLAGS='-OUT:"$@"'
 
-    if test -z "$AS_BIN"; then
-        AS="$AS_BIN"
+    if test -z "$ac_cv_path_AS"; then
+        AS="$ac_cv_path_AS"
     fi
     DSO_CFLAGS=
     DSO_PIC_CFLAGS=
@@ -2512,10 +2513,6 @@
 AC_LANG_C
 AC_HEADER_STDC
 AC_C_CONST
-AC_TYPE_MODE_T
-AC_TYPE_OFF_T
-AC_TYPE_PID_T
-AC_TYPE_SIZE_T
 AC_STRUCT_ST_BLKSIZE
 AC_MSG_CHECKING(for siginfo_t)
 AC_CACHE_VAL(ac_cv_siginfo_t,
@@ -2938,9 +2935,9 @@
 *)
     AC_CHECK_LIB(m, atan)
     AC_CHECK_LIB(dl, dlopen,
-    AC_CHECK_HEADER(dlfcn.h, 
-        LIBS="-ldl $LIBS"
-        AC_DEFINE(HAVE_LIBDL)))
+    [AC_CHECK_HEADER(dlfcn.h, 
+        [LIBS="-ldl $LIBS"
+AC_DEFINE(HAVE_LIBDL)])])
     ;;
 esac
 
@@ -3707,9 +3704,9 @@
 
 AC_CACHE_CHECK(for C++ reinterpret_cast,
                ac_cv_cpp_reinterpret_cast,
-               [AC_TRY_COMPILE(struct X { int i; };
-                               struct Y { int i; };,
-                               X x; X*const z = &x;Y*y = reinterpret_cast<Y*>(z);,
+               [AC_TRY_COMPILE([struct X { int i; };
+                               struct Y { int i; };],
+                               [X x; X*const z = &x;Y*y = reinterpret_cast<Y*>(z);],
                                ac_cv_cpp_reinterpret_cast=yes,
                                ac_cv_cpp_reinterpret_cast=no)])
 if test "$ac_cv_cpp_reinterpret_cast" = yes ; then
@@ -4477,7 +4474,7 @@
 dnl = Support for gcc stack unwinding (from gcc 3.3)
 dnl ========================================================
 if test "$HAVE_GCC3_ABI" && test -z "$SKIP_LIBRARY_CHECKS"; then
-    AC_CHECK_HEADER(unwind.h, AC_CHECK_FUNCS(_Unwind_Backtrace))
+    AC_CHECK_HEADER([unwind.h], [AC_CHECK_FUNCS(_Unwind_Backtrace)])
 fi
 
 dnl ========================================================
@@ -4507,37 +4504,13 @@
 dnl Check for gcc -pipe support
 dnl ========================================================
 AC_MSG_CHECKING([for gcc -pipe support])
-if test -n "$GNU_CC" && test -n "$GNU_CXX" && test -n "$GNU_AS"; then
-    echo '#include <stdio.h>' > dummy-hello.c
-    echo 'int main() { printf("Hello World\n"); exit(0); }' >> dummy-hello.c
-    ${CC} -S dummy-hello.c -o dummy-hello.s 2>&5
-    cat dummy-hello.s | ${AS_BIN} -o dummy-hello.S - 2>&5
-    if test $? = 0; then
-        _res_as_stdin="yes"
-    else
-        _res_as_stdin="no"
-    fi
-    if test "$_res_as_stdin" = "yes"; then
-        _SAVE_CFLAGS=$CFLAGS
-        CFLAGS="$CFLAGS -pipe"
-        AC_TRY_COMPILE( [ #include <stdio.h> ],
-            [printf("Hello World\n");],
-            [_res_gcc_pipe="yes"],
-            [_res_gcc_pipe="no"] )
-        CFLAGS=$_SAVE_CFLAGS
-    fi
-    if test "$_res_as_stdin" = "yes" && test "$_res_gcc_pipe" = "yes"; then
-        _res="yes";
-        CFLAGS="$CFLAGS -pipe"
-        CXXFLAGS="$CXXFLAGS -pipe"
-    else
-        _res="no"
-    fi
-    rm -f dummy-hello.c dummy-hello.s dummy-hello.S dummy-hello a.out
-    AC_MSG_RESULT([$_res])
-else
-    AC_MSG_RESULT([no])
-fi
+
+OLDCC="$CC"
+CC="$CC -pipe"
+AC_TRY_COMPILE(,, [AC_MSG_RESULT(yes)
+CFLAGS="$CFLAGS -pipe"
+CXXFLAGS="$CFLAGS -pipe"], AC_MSG_RESULT(no))
+CC="$OLDCC"
 
 dnl pass -Wno-long-long to the compiler
 MOZ_ARG_ENABLE_BOOL(long-long-warning,
@@ -4869,9 +4842,7 @@
 dnl Conveniently, Win32 sets SKIP_LIBRARY_CHECKS...
 if test -z "$SKIP_LIBRARY_CHECKS"; then
   if test -n "$JS_WANT_READLINE"; then
-    AC_CHECK_LIB(readline, readline,
-                 EDITLINE_LIBS="-lreadline",
-                 AC_MSG_ERROR([No system readline library found.]))
+    AC_CHECK_LIB([readline], [readline], [EDITLINE_LIBS="-lreadline"], AC_MSG_ERROR([No system readline library found.]))
   else
     dnl By default, we use editline
     JS_NATIVE_EDITLINE=1
@@ -5179,7 +5150,7 @@
 dnl JavaScript shell
 dnl ========================================================
 
-AC_HAVE_FUNCS(setlocale)
+AC_CHECK_FUNCS([setlocale])
 
 dnl ========================================================
 dnl Use cygwin wrapper for win32 builds, except MSYS/MinGW
