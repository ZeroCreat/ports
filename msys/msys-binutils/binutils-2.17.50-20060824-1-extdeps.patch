--- binutils-2.17.50-20060824-1-src_orig/binutils/configure.in	2007-08-04 14:55:21.000000000 +0000
+++ binutils-2.17.50-20060824-1-src/binutils/configure.in	2007-08-04 19:53:26.000000000 +0000
@@ -6,13 +6,17 @@
 AC_CANONICAL_SYSTEM
 AC_ISC_POSIX
 
-changequote(,)dnl
-BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
-changequote([,])dnl
+dnl changequote(,)dnl
+dnl BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
+dnl changequote([,])dnl
 AM_INIT_AUTOMAKE(binutils, ${BFD_VERSION})
 
 AM_PROG_LIBTOOL
 
+PKG_CHECK_MODULES([LIBIBERTY], [libiberty])
+PKG_CHECK_MODULES([LIBBFD], [libbfd])
+PKG_CHECK_MODULES([LIBOPCODES], [libopcodes])
+
 AC_ARG_ENABLE(targets,
 [  --enable-targets        alternative target configurations],
 [case "${enableval}" in
--- binutils-2.17.50-20060824-1-src_orig/binutils/Makefile.am	2007-08-04 14:55:21.000000000 +0000
+++ binutils-2.17.50-20060824-1-src/binutils/Makefile.am	2007-08-04 20:08:35.000000000 +0000
@@ -64,13 +64,13 @@
 TOOL_PROGS = nm-new strip-new ar ranlib dlltool objdump
 
 BASEDIR = $(srcdir)/..
-BFDDIR = $(BASEDIR)/bfd
+BFDDIR = $(includedir)/bfd
 INCDIR	= $(BASEDIR)/include
 
 MKDEP = gcc -MM
 
 INCLUDES = -D_GNU_SOURCE \
-	 -I. -I$(srcdir) -I../bfd -I$(BFDDIR) -I$(INCDIR) \
+	 -I. -I$(srcdir) $(LIBBFD_CFLAGS) -I$(INCDIR) \
 	 @HDEFINES@ \
 	 @INCINTL@ \
 	 -DLOCALEDIR="\"$(datadir)/locale\"" \
@@ -106,11 +106,11 @@
 # Code shared by all the binutils.
 BULIBS = bucomm.c version.c filemode.c
 
-BFDLIB = ../bfd/libbfd.la
+BFDLIB = $(LIBBFD_LIBS)
 
-OPCODES = ../opcodes/libopcodes.la
+OPCODES = $(LIBOPCODES_LIBS)
 
-LIBIBERTY = ../libiberty/libiberty.a
+LIBIBERTY = $(LIBIBERTY_LIBS)
 
 .PHONY: install-html install-html-am install-html-recursive
 
@@ -181,27 +181,29 @@
 
 # There's no global DEPENDENCIES.  So, we must explicitly list everything
 # which depends on libintl, since we don't know whether LIBINTL_DEP will be
-# non-empty until configure time.  Ugh!
-size_DEPENDENCIES =      $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-objdump_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB) $(OPCODES)
-nm_new_DEPENDENCIES =    $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-ar_DEPENDENCIES =        $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-strings_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-strip_new_DEPENDENCIES = $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-ranlib_DEPENDENCIES =    $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-cxxfilt_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-objcopy_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-nlmconv_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-srconv_DEPENDENCIES =    $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-sysdump_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-coffdump_DEPENDENCIES =  $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-dlltool_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-windres_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-addr2line_DEPENDENCIES = $(LIBINTL_DEP) $(LIBIBERTY) $(BFDLIB)
-readelf_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY)
-dllwrap_DEPENDENCIES =   $(LIBINTL_DEP) $(LIBIBERTY)
+## non-empty until configure time.  Ugh!
+#size_LDADD =      $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#objdump_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB) $(OPCODES)
+#nm_new_LDADD =    $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#ar_LDADD =        $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#strings_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#strip_new_LDADD = $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#ranlib_LDADD =    $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#cxxfilt_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#objcopy_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#nlmconv_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#srconv_LDADD =    $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#sysdump_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#coffdump_LDADD =  $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#dlltool_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#windres_LDADD =   $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#addr2line_LDADD = $(LIBINTL) $(LIBIBERTY) $(BFDLIB)
+#readelf_LDADD =   $(LIBINTL) $(LIBIBERTY)
+#dllwrap_LDADD =   $(LIBINTL) $(LIBIBERTY)
 
-LDADD = $(BFDLIB) $(LIBIBERTY) $(LIBINTL)
+LIBS = $(BFDLIB) $(LIBIBERTY) $(LIBINTL)
+
+#objdump_LDADD = $(OPCODES)
 
 size_SOURCES = size.c $(BULIBS)
 
@@ -210,14 +212,14 @@
 strings_SOURCES = strings.c $(BULIBS)
 
 readelf_SOURCES = readelf.c version.c unwind-ia64.c dwarf.c
-readelf_LDADD   = $(LIBINTL) $(LIBIBERTY)
+readelf_LIBS   = $(LIBINTL) $(LIBIBERTY)
 
 strip_new_SOURCES = objcopy.c is-strip.c rename.c $(WRITE_DEBUG_SRCS) $(BULIBS)
 
 nm_new_SOURCES = nm.c budemang.c $(BULIBS)
 
-objdump_SOURCES = objdump.c dwarf.c budemang.c prdbg.c $(DEBUG_SRCS) $(BULIBS)
 objdump_LDADD = $(OPCODES) $(BFDLIB) $(LIBIBERTY) $(LIBINTL)
+objdump_SOURCES = objdump.c dwarf.c budemang.c prdbg.c $(DEBUG_SRCS) $(BULIBS)
 
 objdump.o:objdump.c
 	$(COMPILE) -c $(OBJDUMP_DEFS) $(srcdir)/objdump.c
--- binutils-2.17.50-20060824-1-src_orig/gas/configure.in	2007-08-04 22:42:49.000000000 +0000
+++ binutils-2.17.50-20060824-1-src/gas/configure.in	2007-08-04 22:58:08.000000000 +0000
@@ -15,20 +15,24 @@
 AC_CANONICAL_SYSTEM
 AC_ISC_POSIX
 
-changequote(,)dnl
-BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
-changequote([,])dnl
+dnl changequote(,)dnl
+dnl BFD_VERSION=`sed -n -e 's/^.._INIT_AUTOMAKE.*,[ 	]*\([^ 	]*\)[ 	]*).*/\1/p' < ${srcdir}/../bfd/configure.in`
+dnl changequote([,])dnl
 AM_INIT_AUTOMAKE(gas, ${BFD_VERSION})
 
 AM_PROG_LIBTOOL
 
+PKG_CHECK_MODULES([LIBIBERTY], [libiberty])
+PKG_CHECK_MODULES([LIBBFD], [libbfd])
+PKG_CHECK_MODULES([LIBOPCODES], [libopcodes])
+
 AC_ARG_ENABLE(targets,
 [  --enable-targets        alternative target configurations besides the primary],
 [case "${enableval}" in
   yes | "") AC_ERROR(enable-targets option must specify target names or 'all')
 	    ;;
-  no)	    enable_targets= ;;
-  *)	    enable_targets=$enableval ;;
+  no) enable_targets= ;;
+  *)  enable_targets=$enableval ;;
 esac])dnl
 AC_ARG_ENABLE(commonbfdlib,
 [  --enable-commonbfdlib   build shared BFD/opcodes/libiberty library],
Only in binutils-2.17.50-20060824-1-src: Makefile
Only in binutils-2.17.50-20060824-1-src_orig/bfd: aclocal.m4
Only in binutils-2.17.50-20060824-1-src_orig/bfd: configure
Only in binutils-2.17.50-20060824-1-src_orig/bfd/doc: bfd.info
Only in binutils-2.17.50-20060824-1-src/binutils: .libs
Only in binutils-2.17.50-20060824-1-src/binutils: Makefile
diff -r -u binutils-2.17.50-20060824-1-src_orig/gprof/configure.in binutils-2.17.50-20060824-1-src/gprof/configure.in
--- binutils-2.17.50-20060824-1-src_orig/gprof/configure.in	2006-06-02 09:00:58.000000000 +0000
+++ binutils-2.17.50-20060824-1-src/gprof/configure.in	2007-08-05 03:09:05.000000000 +0000
@@ -13,6 +13,9 @@
 
 AM_PROG_LIBTOOL
 
+PKG_CHECK_MODULES([LIBIBERTY], [libiberty])
+PKG_CHECK_MODULES([LIBBFD], [libbfd])
+
 dnl For simplicity, we use the BFD configuration file for most
 dnl things.  However, we also need our own configuration file for
 dnl the automake PACKAGE and VERSION macros.  We don't name it
diff -r -u binutils-2.17.50-20060824-1-src_orig/ld/configure.in binutils-2.17.50-20060824-1-src/ld/configure.in
--- binutils-2.17.50-20060824-1-src_orig/ld/configure.in	2006-07-16 21:39:38.000000000 +0000
+++ binutils-2.17.50-20060824-1-src/ld/configure.in	2007-08-05 03:08:53.000000000 +0000
@@ -13,7 +13,10 @@
 
 AM_PROG_LIBTOOL
 
-AC_ARG_WITH(lib-path, [  --with-lib-path=dir1:dir2...  set default LIB_PATH],LIB_PATH=$withval)
+PKG_CHECK_MODULES([LIBIBERTY], [libiberty])
+PKG_CHECK_MODULES([LIBBFD], [libbfd])
+
+AC_ARG_WITH(lib-path, [  --with-lib-path=dir1:dir2...  set default LIB_PATH],LIB_PATH=$withval)
 AC_ARG_ENABLE(targets,
 [  --enable-targets        alternative target configurations],
 [case "${enableval}" in
