# mod_mmap_static is an experimental module, you almost certainly
# don't need it.  It can make some webservers faster.  No further
# documentation is provided here because you'd be foolish
# to use mod_mmap_static without reading the full documentation.

LoadModule mmap_static_module   lib/apache/mod_mmap_static.so

# mod_vhost_alias provides support for mass virtual hosting
# by dynamically changing the document root and CGI directory
# based on the host header or local IP address of the request.
# See "../htdocs/manual/vhosts/mass.html".

LoadModule vhost_alias_module   lib/apache/mod_vhost_alias.so

#
# Config manipulation modules
#
# mod_env sets up additional or restricted environment variables to be
# passed to CGI/SSI scripts.  It is listed first (lowest priority) since
# it does not do per-request stuff.

LoadModule env_module           lib/apache/mod_env.so

# Optional modules for NCSA user-agent/referer logging compatibility
# We recommend, however, that you just use the configurable access_log.

LoadModule agent_log_module     lib/apache/mod_log_agent.so
LoadModule referer_log_module   lib/apache/mod_log_referer.so

#
# Type checking modules
#
# mod_mime_magic determines the type of a file by examining a few bytes
# of it and testing against a database of filetype signatures.  It is
# based on the unix file(1) command.
# mod_mime maps filename extensions to content types, encodings, and
# "magic" type handlers (the latter is obsoleted by mod_actions, and
# don't confuse it with the previous module).
# mod_negotiation allows content selection based on the Accept* headers.

LoadModule mime_magic_module    lib/apache/mod_mime_magic.so
LoadModule negotiation_module   lib/apache/mod_negotiation.so

#
# Content delivery modules
#
# The status module allows the server to display current details about
# how well it is performing and what it is doing.  Consider also enabling
# the 'ExtendedStatus On' directive to allow full status information.
# Please note that doing so can result in a palpable performance hit.

LoadModule status_module        lib/apache/mod_status.so

# The Info module displays configuration information for the server and
# all included modules. It's very useful for debugging.

LoadModule info_module          lib/apache/mod_info.so

# mod_include translates server-side include (SSI) statements in text files.
# mod_autoindex handles requests for directories which have no index file
# mod_dir handles requests on directories and directory index files.
# mod_cgi handles CGI scripts.

LoadModule includes_module      lib/apache/mod_include.so
LoadModule autoindex_module     lib/apache/mod_autoindex.so
LoadModule dir_module           lib/apache/mod_dir.so
LoadModule cgi_module           lib/apache/mod_cgi.so

# The asis module implements ".asis" file types, which allow the embedding
# of HTTP headers at the beginning of the document.  mod_imap handles internal
# imagemaps (no more cgi-bin/imagemap/!).  mod_actions is used to specify
# CGI scripts which act as "handlers" for particular files, for example to
# automatically convert every GIF to another file type.

LoadModule asis_module          lib/apache/mod_asis.so
LoadModule imap_module          lib/apache/mod_imap.so
LoadModule action_module        lib/apache/mod_actions.so

#
# URL translation modules.
#
# The Speling module attempts to correct misspellings of URLs that
# users might have entered, namely by checking capitalizations
# or by allowing up to one misspelling (character insertion / omission /
# transposition/typo). This catches the majority of misspelled requests.
# If it finds a match, a "spelling corrected" redirection is returned.

LoadModule speling_module       lib/apache/mod_speling.so

# The UserDir module for selecting resource directories by user name
# and a common prefix, e.g., /~<user> , /usr/web/<user> , etc.

LoadModule userdir_module       lib/apache/mod_userdir.so

# The Alias module provides simple URL translation and redirection.

LoadModule alias_module         lib/apache/mod_alias.so

# The URL rewriting module allows for powerful URI-to-URI and
# URI-to-filename mapping using a regular expression based
# rule-controlled rewriting engine.

LoadModule rewrite_module       lib/apache/mod_rewrite.so
LoadModule auth_module          lib/apache/mod_auth.so

# The anon_auth module allows for anonymous-FTP-style username/
# password authentication.

LoadModule anon_auth_module     lib/apache/mod_auth_anon.so
LoadModule db_auth_module       lib/apache/mod_auth_db.so

# "digest" implements HTTP Digest Authentication rather than the less
# secure Basic Auth used by the other modules.  This is the old version.

LoadModule digest_module        lib/apache/mod_digest.so

# "auth_digest" implements HTTP/1.1 Digest Authentication (RFC 2617)
# rather than the less secure Basic Auth used by the other modules.
# This is an updated version of mod_digest, but it is not as well tested
# and is therefore marked experimental.  Use either the one above, or
# this one below, but not both digest modules.
# Note: if you add this module in then you might also need the
# truerand library (available for example from
# ftp://research.att.com/dist/mab/librand.shar) - see the Rule
# DEV_RANDOM above for more info.
#
# Must be added above (run later than) the proxy module because the
# WWW-Authenticate and Proxy-Authenticate headers are parsed in the
# post-read-request phase and it needs to know if this is a proxy request.

LoadModule digest_auth_module   lib/apache/mod_auth_digest.so
LoadModule proxy_module         lib/apache/libproxy.so

# Optional response header manipulation modules.
#
# cern_meta mimics the behavior of the CERN web server with regards to
# metainformation files.

LoadModule cern_meta_module     lib/apache/mod_cern_meta.so

# The expires module can apply Expires: headers to resources,
# as a function of access time or modification time.

LoadModule expires_module       lib/apache/mod_expires.so

# The headers module can set arbitrary HTTP response headers,
# as configured in server, vhost, access.conf or .htaccess configs

LoadModule headers_module       lib/apache/mod_headers.so

# Miscellaneous modules
#
# mod_usertrack is the new name for mod_cookies.  This module
# uses Netscape cookies to automatically construct and log
# click-trails from Netscape cookies, or compatible clients who
# aren't coming in via proxy.
#
# You do not need this, or any other module to allow your site
# to use Cookies.  This module is for user tracking only

LoadModule usertrack_module     lib/apache/mod_usertrack.so

# mod_log_forensic logs a unique id, the request line and headers
# before processing starts, and again when processing completes. If
# processing does not complete due to a bug or an attack, this can be
# detected from the logs.  See support/check_forensic.
# If mod_unique_id is also included, then this will use its unique ID.
# Note that this must come before mod_unique_id.

LoadModule log_forensic_module  lib/apache/mod_log_forensic.so

# mod_unique_id generates unique identifiers for each hit, which are
# available in the environment variable UNIQUE_ID.  It may not work on all
# systems, hence it is not included by default.

LoadModule unique_id_module     lib/apache/mod_unique_id.so

# mod_setenvif lets you set environment variables based on the HTTP header
# fields in the request; this is useful for conditional HTML, for example.
# Since it is also used to detect buggy browsers for workarounds, it
# should be the last (highest priority) module.

LoadModule setenvif_module      lib/apache/mod_setenvif.so

# 3rd party modules
