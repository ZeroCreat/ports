--- SMTP.php	2006-04-25 14:08:07.480472992 +0200
+++ SMTP.php	2005-09-27 08:55:02.000000000 +0200
@@ -665,41 +666,34 @@
     /**
      * Send the MAIL FROM: command.
      *
-     * @param string $sender    The sender (reverse path) to set.
-     * @param string $params    String containing additional MAIL parameters,
-     *                          such as the NOTIFY flags defined by RFC 1891
-     *                          or the VERP protocol.
-     *
-     *                          If $params is an array, only the 'verp' option
-     *                          is supported.  If 'verp' is true, the XVERP
-     *                          parameter is appended to the MAIL command.  If
-     *                          the 'verp' value is a string, the full
-     *                          XVERP=value parameter is appended.
+     * @param string The sender (reverse path) to set.
+     *
+     * @param array optional arguments. Currently supported:
+     *        verp   boolean or string. If true or string
+     *               verp is enabled. If string the characters
+     *               are considered verp separators.
      *
      * @return mixed Returns a PEAR_Error with an error message on any
      *               kind of failure, or true on success.
      * @access public
      * @since  1.0
      */
-    function mailFrom($sender, $params = null)
+    function mailFrom($sender, $args = array())
     {
-        $args = "FROM:<$sender>";
+        $argstr = '';
 
-        /* Support the deprecated array form of $params. */
-        if (is_array($params) && isset($params['verp'])) {
+        if (isset($args['verp'])) {
             /* XVERP */
-            if ($params['verp'] === true) {
-                $args .= ' XVERP';
+            if ($args['verp'] === true) {
+                $argstr .= ' XVERP';
 
             /* XVERP=something */
-            } elseif (trim($params['verp'])) {
-                $args .= ' XVERP=' . $params['verp'];
+            } elseif (trim($args['verp'])) {
+                $argstr .= ' XVERP=' . $args['verp'];
             }
-        } elseif (is_string($params)) {
-            $args .= ' ' . $params;
         }
 
-        if (PEAR::isError($error = $this->_put('MAIL', $args))) {
+        if (PEAR::isError($error = $this->_put('MAIL', "FROM:<$sender>$argstr"))) {
             return $error;
         }
         if (PEAR::isError($error = $this->_parseResponse(250))) {
@@ -712,24 +706,16 @@
     /**
      * Send the RCPT TO: command.
      *
-     * @param string $recipient The recipient (forward path) to add.
-     * @param string $params    String containing additional RCPT parameters,
-     *                          such as the NOTIFY flags defined by RFC 1891.
+     * @param string The recipient (forward path) to add.
      *
      * @return mixed Returns a PEAR_Error with an error message on any
      *               kind of failure, or true on success.
-     *
      * @access public
      * @since  1.0
      */
-    function rcptTo($recipient, $params = null)
+    function rcptTo($recipient)
     {
-        $args = "TO:<$recipient>";
-        if (is_string($params)) {
-            $args .= ' ' . $params;
-        }
-
-        if (PEAR::isError($error = $this->_put('RCPT', $args))) {
+        if (PEAR::isError($error = $this->_put('RCPT', "TO:<$recipient>"))) {
             return $error;
         }
         if (PEAR::isError($error = $this->_parseResponse(array(250, 251)))) {
