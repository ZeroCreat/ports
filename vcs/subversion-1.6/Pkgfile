# $Id: Pkgfile,v 1.8 2007/05/09 21:02:44 roman Exp $
#
# Package: subversion
# Section: universe/devel
# Description: A version control system.
#  Subversion is a version control system. Originally designed to be a
#  compelling replacement for CVS in the open source community, it has far
#  exceeded that goal and seen widespread adoption in both open source and
#  corporate environments. The Subversion project produces Subversion's
#  core libraries (written in C), a fully functional command line client
#  (svn), repository administration programs, API bindings for various
#  languages (Perl, Python, Java, Ruby, etc.), and various additional tools
#  and scripts.
# URL: http://subversion.tigris.org/
# Maintainer: Roman Senn <rs@adfinis.com>
# Depends on:

name=subversion
version=1.6.5
release=1
source=(http://subversion.tigris.org/downloads/subversion-$version.tar.bz2)

build()
{
  cd subversion-$version

  case $CFLAGS in
    *-g*) ;;
    *) CPPFLAGS="-DNDEBUG${CPPFLAGS:+ $CPPFLAGS}" ;;
  esac

  rm -f build/libtool.m4

  libtoolize --force --copy --install
  aclocal --force -I build/ac-macros
  autoheader --force
  automake --force --copy --foreign --add-missing || true
  aclocal --force -I build/ac-macros
  autoconf --force

  #cp /usr/share/libtool/config/config.{sub,guess} build

  echo -e "#!$bindir/sh\necho exported" >subversion/svnversion/svnversion
  chmod 755 subversion/svnversion/svnversion

  set -- $(IFS=". " && echo $(python --version 2>&1)) && shift

  instdir=lib/python$1.$2/site-packages

  APXS=`echo $prefix/*bin/apxs*`

  export CFLAGS CPPFLAGS

  set -- \
      --build="$build" \
      --host="$host" \
      --prefix="$prefix" \
      --disable-mod-activation \
      --with-editor="nano" \
      --with-zlib="$prefix" \
      --with-apr="$prefix/bin/apr-1-config" \
      --with-apr-util="$prefix/bin/apu-1-config" \
      ${apache+--with-apache${apache:+="$apache"}} \
      --with-python="python" \
      --with-swig="$prefix"

  for apxs in $APXS; do

   (rm -rf ${builddir=build-`$apxs -q progname`} && mkdir -p $builddir && cd $builddir

    ../configure \
        "$@" \
        --with-apxs="$apxs"

    make  apache-mod

    libexecdir=`$apxs -q libexecdir`

    install -d $PKG${libexecdir}
    install -m 755 subversion/mod_*_svn/.libs/mod_*.so $PKG${libexecdir}/

    sysconfdir=`$apxs -q sysconfdir`

    install -d $PKG${sysconfdir}/mods-available

    echo "LoadModule dav_svn_module $libexecdir/mod_dav_svn.so
LoadModule authz_svn_module $libexecdir/mod_authz_svn.so" >$PKG${sysconfdir}/mods-available/dav_svn.load
cat >$PKG${sysconfdir}/mods-available/dav_svn.conf <<EOF
# dav_svn.conf - Example Subversion/Apache configuration
#
# For details and further options see the Apache user manual and
# the Subversion book.
#
# NOTE: for a setup with multiple vhosts, you will want to do this
# configuration in $sysconfdir/sites-available/*, not here.

# <Location URL> ... </Location>
# URL controls how the repository appears to the outside world.
# In this example clients access the repository as http://hostname/svn/
# Note, a literal /svn should NOT exist in your document root.
#<Location /svn>

  # Uncomment this to enable the repository
  #DAV svn

  # Set this to the path to your repository
  #SVNPath /var/lib/svn
  # Alternatively, use SVNParentPath if you have multiple repositories under
  # under a single directory (/var/lib/svn/repo1, /var/lib/svn/repo2, ...).
  # You need either SVNPath and SVNParentPath, but not both.
  #SVNParentPath /var/lib/svn

  # Access control is done at 3 levels: (1) Apache authentication, via
  # any of several methods.  A "Basic Auth" section is commented out
  # below.  (2) Apache <Limit> and <LimitExcept>, also commented out
  # below.  (3) mod_authz_svn is a svn-specific authorization module
  # which offers fine-grained read/write access control for paths
  # within a repository.  (The first two layers are coarse-grained; you
  # can only enable/disable access to an entire repository.)  Note that
  # mod_authz_svn is noticeably slower than the other two layers, so if
  # you don't need the fine-grained control, don't configure it.

  # Basic Authentication is repository-wide.  It is not secure unless
  # you are using https.  See the 'htpasswd' command to create and
  # manage the password file - and the documentation for the
  # 'auth_basic' and 'authn_file' modules, which you will need for this
  # (enable them with 'a2enmod').
  #AuthType Basic
  #AuthName "Subversion Repository"
  #AuthUserFile $sysconfdir/dav_svn.passwd

  # To enable authorization via mod_authz_svn
  #AuthzSVNAccessFile $sysconfdir/dav_svn.authz

  # The following three lines allow anonymous read, but make
  # committers authenticate themselves.  It requires the 'authz_user'
  # module (enable it with 'a2enmod').
  #<LimitExcept GET PROPFIND OPTIONS REPORT>
    #Require valid-user
  #</LimitExcept>

#</Location>
EOF

   )
  done

 (
  ./configure "$@" --without-apxs &&
  make &&
  make swig-py &&
  make DESTDIR="$PKG" install &&
  make DESTDIR="$PKG" swig_pydir="$prefix/$instdir/libsvn" swig_pydir_extra="$prefix/$instdir/svn" install-swig-py-lib
 ) || return $?
}
